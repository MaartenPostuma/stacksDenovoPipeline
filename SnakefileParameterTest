SMALLM = list(range(3,8))
LARGEM = list(range(1,9))
rule all:
    input:
        MparameterPNG=expand("output/parameterTest/LargeMparameter.png"),
        testLargeM=expand("output/parameterTest/LargeM{largeM}/test{largeM}",largeM=LARGEM),
        mparameterPNG=expand("output/parameterTest/SmallMparameter.png"),
        testSmallM=expand("output/parameterTest/SmallM{SmallM}/test{SmallM}",SmallM=SMALLM)


rule subset_popmap:
    input:
        "data/popmap.tsv"
    output:
        "data/popmapSub.tsv"
    shell:
        "shuf -N 20 data/popmap.tsv > popmapSub.tsv"

rule mkdirLargeM:
    input:
        "data/popmapSub.tsv"
    output:
        expand("output/parameterTest/LargeM{{largeM}}/test{{largeM}}")
    params:
        largeM="{largeM}"
    shell:
        "cat {input} | head -n {params.largeM} > {output}"

rule runStacksLargeM:
    input:
        inDir=expand("output/parameterTest/LargeM{{largeM}}/test{{largeM}}")
    output:
        outLog=expand("output/parameterTest/LargeM{{largeM}}/denovo_map.log")
    params:
        largeM="{largeM}",
        popmapSub="data/popmapSub.tsv",
        inDir="output/parameterTest/LargeM{largeM}/"

    conda:
        "src/env/stacks.yaml"
    threads: 4
    shell:
        """
        denovo_map.pl --samples output/demultiplex/ --popmap {params.popmapSub} -T {threads} \
        -o {params.inDir} -n {params.largeM} -m 3 -M {params.largeM}  \
        -X 'populations: --vcf -r 80'
        """

rule extractInfoLargeM:
    input:
        outLog=expand("output/parameterTest/LargeM{largeM}/denovo_map.log",largeM=LARGEM)
    output:
        MparameterTSV="output/parameterTest/LargeMparameter.tsv"
    shell:
        """
        paste <(cat output/parameterTest/LargeM*/denovo_map.log | grep "Kept" | cut -f2,14 -d " ")  <(cat output/parameterTest/LargeM*/denovo_map.log | grep "per-sample coverage" | cut -f2 -d "=" | cut -f1 -d "x") > output/parameterTest/LargeMparameter.tsv
        """

rule makePlotLargeM:
    input:
        MparameterTSV="output/parameterTest/LargeMparameter.tsv"
    output:
        MparameterPNG="output/parameterTest/LargeMparameter.png"
    shell:
        "Rscript src/LargeMparameterTest.R"

#Small M paramter Test

rule mkdirSmallM:
    input:
        "data/popmapSub.tsv"
    output:
        expand("output/parameterTest/SmallM{{SmallM}}/test{{SmallM}}")
    params:
        SmallM="{SmallM}"
    shell:
        "cat {input} | head -n {params.SmallM} > {output}"

rule runStacksSmallM:
    input:
        inDir=expand("output/parameterTest/SmallM{{SmallM}}/test{{SmallM}}")
    output:
        outLog=expand("output/parameterTest/SmallM{{SmallM}}/denovo_map.log")
    params:
        SmallM="{SmallM}",
        popmapSub="data/popmapSub.tsv",
        inDir="output/parameterTest/SmallM{SmallM}/"

    conda:
        "src/env/stacks.yaml"
    threads: 4
    shell:
        """
        denovo_map.pl --samples output/demultiplex/ --popmap {params.popmapSub} -T {threads} \
        -o {params.inDir} -n 0 -m {params.SmallM} -M 2  \
        -X 'populations: --vcf -r 80'
        """

rule extractInfoSmallM:
    input:
        outLog=expand("output/parameterTest/SmallM{SmallM}/denovo_map.log",SmallM=SMALLM)
    output:
        MparameterTSV="output/parameterTest/SmallMparameter.tsv"
    shell:
        """
        paste <(cat output/parameterTest/SmallM*/denovo_map.log | grep "Kept" | cut -f2,14 -d " ")  <(cat output/parameterTest/SmallM*/denovo_map.log | grep "per-sample coverage" | cut -f2 -d "=" | cut -f1 -d "x") > output/parameterTest/SmallMparameter.tsv
        """

rule makePlotSmallM:
    input:
        MparameterTSV="output/parameterTest/SmallMparameter.tsv"
    output:
        MparameterPNG="output/parameterTest/SmallMparameter.png"
    shell:
        "Rscript src/SmallMparameterTest.R"